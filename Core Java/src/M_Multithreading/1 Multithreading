Date:07/12/2023
---------------
Multithreading
----------------
        - A thread is a light weight process under execution within a process
        - Multithreading is used to increase the performance of applications

        Example:
                void main()
                {
                     se = sumEven();
                     so = sumOdd();
                }
                int sumEven()
                {
                 ...
                 ...
                 }
                 int sumOdd()
                 {
                    ...
                    ...
                 }
   Creating Threads in java
 -------------------------------
            - By creating a class which extends thread class
                        or
            - By creating a class which implements Runnable interface

Using Thread class
--------------------
            class MyThread extends Thread // Thread is concrete class (full implemented, not abstract)
            {
                public void run()
                {
                   // logic goes here
                }
            }
          MyThread t=new MyThread();
          t.start(); // creates a thread and invokes run()

State Transition Diagram of a Thread
-------------------------------------
                    Refer diagram Thread States

                                                                   I/O Operations
                                                                   notify()
                               start()           run()             notifyAll()
                    New (born) ------> Runnable ------> Running -----------------> Blocked
                                        ^           |          |    sleep()
                                        |           v          |    wait()
                                        +------> Terminated <+--
                                            stop() (Dead)

-----------------------------------------------------------------------------------------------------------------------

                      new    MyThread t= new MyThread();
                       |              \
                       | start();      \
            run()      |                \
 Running ------------ Runnable---------- Dead
                       |                 /
 After I/O Operations  |  I/O Operations/
                       |               /
 After sleep()         |  sleep()     /
                       |             /
 notify/ notifyAll()   |  wait()    /
                       |           /
                       |          /
                   Blocked
-------------------------------------------------------------------------------------------------------------------



Method of Thread class
----------------------
        - Thread currentThread()
        - void start()
        - void run()
        - void setName(String)
        - String getName()
        - void setPriority(int)
        - int getPriority()
        - void sleep(long)
        - String toString()

        Refer program ThreadMethodsDemo.java

Thread[#1,main,5,main]
-----------------------
            Thread-0 --> Name of the thread (default name)
            5 --> Priority of the thread (default priority)
            main --> thread group (Collection of threads)

    interface Runnable
    {
          public abstract void run();

    }
    public class Thread implements Runnable
    {
        public static final int MIN_PRIORITY = 1;
        public static final int NORM_PRIORITY = 5;
        public static final int MAX_PRIORITY = 10;

        public void run(){}// empty method
        public void start()
        {
            ...
            run();
        }
        ....
    }

  Note
  -----
     - if the priority is 1< or >10 then will throw an IllegalArgumentException
     - IllegalArgumentException is a subclass of runtime exception class and
        categorized as unchecked exception