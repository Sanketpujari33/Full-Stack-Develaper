Date: 16/12/2023
------------------
Apache Maven Tool
------------------
            - Maven is a powerful project management tool
            - Maven is used to build projects
            - Maven is used to add the project dependency jar files into the project
            - Maven is used to create the right project structure
            - Maven is used to build and deploy the project

Creating a Maven Project in Eclipse
------------------------------------
             - click on file -> new -> Maven Project
                - click next
             - In Catalog Select:
                            - Internal
             - In Artifact Id Select :
                            - maven-archetype-quickstart

                 - click next

             - Group Id:
                     - maven
             - Artifact id:
                     - FirstMavenProj (Project Name)
             - Package :
                     - com.maven

                     - click finish

 pom.xml (project object model)
 ------------------------------
        - In this pom.xml file we add the project dependency jar files
        - <project> is the root element of pom.xml file

  To add mysql-connector-java-8.0.30.jar file into the project using Maven
  -------------------------------------------------------------------------
                    Google: mysql connector java maven

                    Copy the below code and paste in between <dependencies> element of pom.xml file

                    <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.45</version>
                    </dependency>

                    Refer program pom.xml


Frameworks
---------------
        - A frameworks is a group of predefined libraries which comes with set of jar files
        - Frameworks will provide some common logics required for the project development
        - Frameworks provide reusable components
        - Frameworks will reduce the burden to the developers

                - Hibernate Framework - 3
                - Spring Framework  - 6
                        - Spring Core/ Bean Module
                        - Spring DAO Module
                                - Spring JDBC Module
                                - Spring ORM Module (Hibernate)
                                - Spring Data JPA Module
                        - Spring MVC Module -> Used to develop web Applications
                        - Spring Boot Module
                        - Spring REST Module -> Used to develop REST APIs
                - MicroServices using Spring Boot - 2
                - JUnit tool with Mocking - 1
                - Angular Framework - 3

Hibernate Framework
--------------------
        - Hibernate is an ORM Framework
        - ORM Stand for Object Relational Mapping

        - ORM :-
        - POJO Class
                - POJO Stand for Plain OLd Java Object
                - which is a Javabean class without events
                        EX:
                            public class Employee
                            {
                                private int eno;
                                private String ename;
                                private Double salary;
                                public void setEno(int eno)
                                {
                                     this.eno=eno;
                                 }
                                public int getEno()
                                {
                                 return eno;
                                 }
                                 ....
                            }

                        POJO Class: Employee
                        ----------------------------
                        |  eno: int                |
                        |  ename: String           |
                        |  salary: Double          |
                        ----------------------------

                        Example:
                        Employee emp = new Employee();
                        emp.setEno(111);
                        emp.setEname("Sanket");
                        emp.setSalary(8000.0);

                        Database Table: Employee
                        -----------------------------------------------------
                        |  eno (int)  |  ename (String)  |  salary (Double) |
                        -----------------------------------------------------
                        |    111      |     Sanket       |      8000.0      |
                        -----------------------------------------------------

        JDBC
       -------
            PreparedStatement st=con.prepareStatement("insert into Employee values('"+emp.getEno()+"',
            '"+emp.getEname+"','"+emp.getSalary+"')");
            st.executeUpdate

       Drawback of JDBC
       -----------------
                - Not object-oriented
                - Database dependent


        ORM(Hibernate)
        --------------
                - ORM Framework are object oriented
                - ORM Framework are database independent

                    persist(emp);
                    save(emp);


                Refer diagram ORM

                Object-Relational Mapping (ORM):

                   +-----------------------------------+
                   |              Objects              |
                   +-----------------------------------+
                            |          |
                   Mapping  |          |  Persistence
                            v          v
                   +-----------------------------------+
                   |         ORM Framework            |
                   |  (e.g., Hibernate, JPA, etc.)    |
                   +-----------------------------------+
                            |          |
                   Mapping  |          |  Database
                            v          v
                   +-----------------------------------+
                   |           Relational Database     |
                   +-----------------------------------+


  Hibernate Overview
  ------------------
        - Hibernate is an ORM solution for java, and it raised as an open source persistent
           Framework created by Gavin King
        - Hibernate maps Java classes to database tables and Java class properties with the
           table columns using Hibernate XML mapping file
            Ex:
                  emp.hbm.xml

        - Hibernate sits between Java object and database
            Java Objects <--> Hibernate <->  Databases
        - Provides simple APIs for storing and retrieving Java objects directly to and'
         from the database
                persist() / save() - deprecated -> Insert command
                merge() / update() - deprecated -> Update command
                remove()/ delete() - deprecated -> Delete command
                get()   /  list() -  Deprecated -> select command

         - In Hibernate we create Hibernate XML configuration file in which we configure the database
            connections like driver class, url, username and password and in this xml file we refer to
            Hibernate XML mapping files
             Ex:
                hibernate.cfg.xml

         - If there is a change in database then the only need to change is XML file properties